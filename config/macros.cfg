[gcode_macro PRINT_START]
gcode:
    {% set BED_TEMP = params.BED|default(60)|float %}
    {% set EXTRUDER_TEMP = params.EXTRUDER|default(190)|float %}
    # Start bed heating
    M140 S{BED_TEMP}
    # Start extruder heating
    M104 S120
    # Use absolute coordinates
    G90
    # Use relative extruder distances
    M83
    # Reset the G-Code Z offset (adjust Z offset if needed)
    SET_GCODE_OFFSET Z=0.0
    # Wait for extruder to warm up a bit (10s)
    G4 P10000
    # Home the printer
    G28
    # Load Bed Mesh
    BED_MESH_PROFILE LOAD=default
    # Lift up while waiting for final nozzle temp
    G1 Z50 F240
    # Move to primimng start point
    G1 X1 Y20 F5000
    # Wait for bed to reach temperature
    M190 S{BED_TEMP}
    # Set and wait for nozzle to reach temperature
    M109 S{EXTRUDER_TEMP}
    # Move to first layer height
    G1 Z0.28 F240
    # reset extruder
    G92 E0
    # prime the nozzle
    G1 Y200 E15 F1500 
    # move to side a little
    G1 X1.3 F5000
    # reset extruder
    G92 E0
    # prime the nozzle (second line)
    G1 Y20 E30 F1500
    # reset extruder
    G92 E0
    # move z axis up again (for move to start position)
    G1 Z2.0 F3000

[gcode_macro PRINT_END]
gcode:
    # Turn off bed, extruder, and fan
    M140 S0
    M104 S0
    M106 S0
    # Move nozzle away from print while retracting
    G91
    G1 X-2 Y-2 E-3 F300
    # Raise nozzle by 10mm
    G1 Z10 F3000
    G90
    # Disable steppers
    M84

[gcode_macro LOAD_FILAMENT]
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
    SAVE_GCODE_STATE NAME=load_state
    G91
    G92 E0
    G1 E35 F{max_velocity} # fast-load
    G1 E25 F{speed} # purge
    RESTORE_GCODE_STATE NAME=load_state

[gcode_macro UNLOAD_FILAMENT]
gcode:
    {% set speed = params.SPEED|default(300) %}
    {% set max_velocity = printer.configfile.settings['extruder'].max_extrude_only_velocity %}
    SAVE_GCODE_STATE NAME=unload_state
    G91
    G92 E0
    G1 E25 F{speed} # purge
    G1 E-50 F{max_velocity} # fast-unload
    RESTORE_GCODE_STATE NAME=unload_state

[gcode_macro POWER_OFF_PRINTER]
gcode:
  {action_call_remote_method("set_device_power",
                             device="printer",
                             state="off")}

# Turn PSU off
[delayed_gcode delayed_printer_off]
initial_duration: 0.0
gcode:
  {% if printer.idle_timeout.state == "Idle" %}
    POWER_OFF_PRINTER
  {% endif %}

# After idle timeout: disable motors, heaters, wait for cooldown, turn psu off
[idle_timeout]
timeout: 1800
gcode:
  M84
  TURN_OFF_HEATERS
  TEMPERATURE_WAIT SENSOR=extruder MAXIMUM=50
  UPDATE_DELAYED_GCODE ID=delayed_printer_off DURATION=5

# Set Nozzle Temp to some random number to make idle_timeout work
[delayed_gcode fix_idle_timeout]
initial_duration: 2.0
gcode:
  SET_HEATER_TEMPERATURE HEATER=extruder TARGET=25
  TEMPERATURE_WAIT SENSOR=extruder MINIMUM=22
  TURN_OFF_HEATERS

# implement beep gcode
[gcode_macro M300]
gcode:
  {action_call_remote_method("notify",
                             name="pushover_gcode",
                             message="BEEP")}

# implement filament change gcode
[gcode_macro M600]
gcode:
    {% set X = params.X|default(50)|float %}
    {% set Y = params.Y|default(0)|float %}
    {% set Z = params.Z|default(10)|float %}
    SAVE_GCODE_STATE NAME=M600_state
    PAUSE
    G91
    G1 E-.8 F2700
    G1 Z{Z}
    G90
    G1 X{X} Y{Y} F3000
    G91
    G1 E-50 F1000
    {action_call_remote_method("notify",
                               name="pushover_gcode",
                               message="Filament change needed! Afterwards continue with RESUME")}
    RESTORE_GCODE_STATE NAME=M600_state

[gcode_macro SEND_INIT_COMPLETE]
gcode:
    {action_call_remote_method("notify",
                           name="pushover_gcode",
                           message="Completed Initialization")}

[gcode_macro INITIALIZE]
gcode:
    SET_HEATER_TEMPERATURE HEATER=heater_bed TARGET=60
    G28 # Home
    Z_TILT_ADJUST # Z tilt adjust
    TEMPERATURE_WAIT SENSOR=heater_bed MINIMUM=60
    BED_MESH_CALIBRATE # Bed Mesh
    SEND_INIT_COMPLETE

